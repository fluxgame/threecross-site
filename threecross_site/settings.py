"""
Django settings for threecross_site project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from django.core.exceptions import ImproperlyConfigured

try:
    TARGET_ENV = os.environ["TARGET_ENV"]
except KeyError:
    raise ImproperlyConfigured("The TARGET_ENV environment variable is not set")

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

try:
    SECRET_KEY = os.environ["DJANGO_SECRET_KEY"]
except KeyError:
    raise ImproperlyConfigured("The DJANGO_SECRET_KEY environment variable is not set")

try:
    RECAPTCHA_PRIVATE_KEY = os.environ["RECAPTCHA_PRIVATE_KEY"]
except KeyError:
    raise ImproperlyConfigured("The RECAPTCHA_PRIVATE_KEY environment variable is not set")

try:
    RECAPTCHA_PUBLIC_KEY = os.environ["RECAPTCHA_PUBLIC_KEY"]
except KeyError:
    raise ImproperlyConfigured("The RECAPTCHA_PUBLIC_KEY environment variable is not set")

try:
    GOOGLE_API_KEY = os.environ["GOOGLE_API_KEY"]
except KeyError:
    raise ImproperlyConfigured("The GOOGLE_API_KEY environment variable is not set")

try:
    SLACK_TOKEN = os.environ["SLACK_TOKEN"]
except KeyError:
    raise ImproperlyConfigured("The SLACK_TOKEN environment variable is not set")

if TARGET_ENV == "dev":
    DEBUG = True

    ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'dev.3cross.coop']

    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'root': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    }
elif TARGET_ENV == 'prod':
    DEBUG = False

    ALLOWED_HOSTS = ['3cross.coop']
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
elif TARGET_ENV == 'prod':
    DEBUG = False

    ALLOWED_HOSTS = ['staging.3cross.coop']
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
else:
    raise ImproperlyConfigured(f"TARGET_ENV '{TARGET_ENV}' is unknown.")


COMPRESS_ENABLED = True

# Application definition

DJANGO_CORE_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
]

THIRD_PARTY_APPS = [
    'snowpenguin.django.recaptcha3',
    # 'dj_authentication',
    'cuser',
    'phonenumber_field',
    # "compressor",
    # "dateutil",
    # "bs4",
    "django_extensions",
    # "dateparser",
    'crispy_forms',
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    # 'account.socialaccount.providers.facebook',
    # 'account.socialaccount.providers.yahoo',
]

MY_APPS = [
    'items',
    'pages',
    'businesses',
    'members',
    'transactions',
    'users',
    'addresses',
    'surveys',
]

INSTALLED_APPS = DJANGO_CORE_APPS + THIRD_PARTY_APPS + MY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'dj_authentication.request_http_auth.HTTPAuthMiddleware',
]

ROOT_URLCONF = 'threecross_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'threecross_site.wsgi.application'

# REQUEST_USER_BACKENDS = [
#     'dj_authentication.methods.bearer',
#     'django.contrib.auth',
# ]

# OPENID_PROVIDER = 'dj_authentication.openid:SimpleDjangoProvider'  # for tokens sent in email verification messages

# MAP_ID_TO_USER_FUNC = 'dj_authentication.user_mappings:map_email'

# os.environ['GOOGLE_AUTH_URL'] = 'https://client_id@accounts.google.com'
# os.environ['FACEBOOK_AUTH_URL'] = 'facebook+https://app_id@facebook.com'

AUTH_USER_MODEL = 'users.User'
AUTH_GROUP_MODEL = 'users.Group'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.dirname(BASE_DIR) + '/public/static/'

RECAPTCHA_DEFAULT_ACTION = 'generic'
RECAPTCHA_SCORE_THRESHOLD = 0

PHONENUMBER_DEFAULT_REGION = 'US'

LOGIN_URL = '/members/login/'
LOGIN_REDIRECT_URL = 'profile'
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_LOGOUT_REDIRECT_URL ="/members/login"

AUTHENTICATION_BACKENDS = (
 "django.contrib.auth.backends.ModelBackend",
 "allauth.account.auth_backends.AuthenticationBackend",
 )

SITE_ID = 1

ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email', ],
        'AUTH_PARAMS': {'access_type': 'online',},
    }
}

CRISPY_TEMPLATE_PACK = 'bootstrap4'
